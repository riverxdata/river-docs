"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2635],{7290:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>t,metadata:()=>s,toc:()=>c});var s=i(8455),r=i(4848),a=i(8453);const t={slug:"setup-shell-remote-server",title:"Hack your shell environment",authors:["river"],tags:["zsh","river","micromamba"]},o=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Set up variables",id:"set-up-variables",level:2},{value:"Install micromamba",id:"install-micromamba",level:2},{value:"Activate environment",id:"activate-environment",level:3},{value:"Create new environment",id:"create-new-environment",level:3},{value:"Goofys fuse file system for S3",id:"goofys-fuse-file-system-for-s3",level:2},{value:"Improve your shell experience",id:"improve-your-shell-experience",level:2},{value:"Activate all by <code>.river.sh</code>",id:"activate-all-by-riversh",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Setting up a shell environment on a remote server can be a tedious process, especially when dealing with multiple dependencies. This one also can be used for your local machine.\nThis guide walks you through installing ",(0,r.jsx)(n.strong,{children:"micromamba"}),", setting up a River environment, and configuring useful tools like ",(0,r.jsx)(n.strong,{children:"goofys"})," to work with cloud storage  (S3) and zsh (amazing shell)\n",(0,r.jsx)(n.img,{alt:"zsh",src:i(7990).A+"",width:"1310",height:"273"})]}),"\n",(0,r.jsx)(n.h2,{id:"set-up-variables",children:"Set up variables"}),"\n",(0,r.jsx)(n.p,{children:"It will define a hard version for installing goofys, micromamba. You can adjust to update latest version"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'echo "River software dependencies setup"\nMICROMAMBA_VERSION=2.0.5\nGOOFYS_VERSION=0.24.0\nRIVER_BIN=$HOME/.river/bin\nmkdir -p $RIVER_BIN\n'})}),"\n",(0,r.jsx)(n.h2,{id:"install-micromamba",children:"Install micromamba"}),"\n",(0,r.jsx)(n.p,{children:"Micromamba is a lightweight, fast alternative to Conda for managing environments and packages.\nIt is a small, standalone executable that provides the same package management features as Conda but with much lower overhead. Unlike Conda, Micromamba does not require a full Anaconda installation, making it ideal for minimal setups, CI/CD pipelines, and remote servers."}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsx)(n.p,{children:"Key Features:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Fast and lightweight: Much smaller than Conda, with a quick installation process."}),"\n",(0,r.jsx)(n.li,{children:"Standalone executable: No need for a full Conda installation."}),"\n",(0,r.jsx)(n.li,{children:"Supports Conda environments: Fully compatible with Conda packages and repositories."}),"\n",(0,r.jsx)(n.li,{children:"Works in remote/cloud environments: Ideal for automation and scripting"}),"\n"]})]}),"\n",(0,r.jsxs)(n.p,{children:["Create an environmen call ",(0,r.jsx)(n.code,{children:"river"})," that helps to install common software without required ",(0,r.jsx)(n.code,{children:"sudo"})," permision, install based on user space:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Python (from Anaconda) for scripting and development."}),"\n",(0,r.jsx)(n.li,{children:"R-base for statistical computing and bioinformatics applications."}),"\n",(0,r.jsx)(n.li,{children:"Singularity (v3.8.6) for containerized workflows. The singularity has the image is similar to a file, it is portable, has a great integration with the host system"}),"\n",(0,r.jsx)(n.li,{children:"Nextflow to enable scalable and reproducible scientific workflows."}),"\n",(0,r.jsx)(n.li,{children:"Zsh for a better shell experience."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"AWS CLI to interact with AWS services like S3."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Base softwares\n# micromamba\nexport HOME=$HOME\nexport MICROMAMBA_EXECUTE=$HOME/.river/bin\nexport PATH=$HOME/.river/bin:$PATH\nmkdir -p $MICROMAMBA_EXECUTE\nif [ ! -f "$RIVER_BIN/micromamba"  ]; then\n    echo "Installing micromamba..."\n    curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/$MICROMAMBA_VERSION | tar -xvj bin/micromamba\n    mv bin/micromamba $RIVER_BIN/micromamba\n    rm -rf bin\nelse\n    echo "micromamba already exists at: $HOME/.river/bin"\nfi\n# Start up\nexport PATH="$HOME/.river/bin:$PATH"\nexport MAMBA_ROOT_PREFIX="$HOME/.river/images/micromamba"\n# Create the singularity dir\nmkdir -p $HOME/.river/images/singularities/images\n\n# Create micromamba environment and install river-utils\nmicromamba create -n river \\\n    anaconda::python \\\n    conda-forge::r-base \\\n    conda-forge::singularity=3.8.6 \\\n    bioconda::nextflow \\\n    conda-forge::zsh \\\n    conda-forge::awscli \\\n    -y\n'})}),"\n",(0,r.jsx)(n.h3,{id:"activate-environment",children:"Activate environment"}),"\n",(0,r.jsxs)(n.p,{children:["To install additional software, you can install it in the ",(0,r.jsx)(n.code,{children:"river"})," environment or create a new environment. Below is an example of how to activate the ",(0,r.jsx)(n.code,{children:"river"})," environment and install additional software.\nIt is based on conda, what you need to do is searching for your softwares. Almost are hosted on the ",(0,r.jsx)(n.a,{href:"https://anaconda.org/",children:(0,r.jsx)(n.strong,{children:"conda"})}),". Find the command and replace ",(0,r.jsx)(n.code,{children:"conda"})," with ",(0,r.jsx)(n.code,{children:"micromamba"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Activate the river environment\neval "$(micromamba shell hook --shell bash)"\nmicromamba activate river\n\n# Install additional software\nmicromamba install -n river \\\n    conda-forge::htop \\\n    conda-forge::jq \\\n    conda-forge::tree \\\n    -y\n'})}),"\n",(0,r.jsx)(n.h3,{id:"create-new-environment",children:"Create new environment"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create a new environment and install Python\nmicromamba create -n new_env \\\n    anaconda::python=3.9 \\\n    -y\n\n# Activate the new environment\nmicromamba activate new_env\n\n# Verify Python installation\npython --version\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"micromamba",src:i(7385).A+"",width:"1310",height:"273"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Figure 1:"})," Micromamba helps to setup your perfect working environments on remote server"]}),"\n",(0,r.jsx)(n.p,{children:"In this example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"new_env"}),": The name of the new environment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"python=3.9"}),": Specifies the version of Python to install. You can adjust the version as needed."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["This allows you to create isolated environments for different projects or dependencies. It is good practice to install tools in different environemnts.\nIf you develop web application, install ",(0,r.jsx)(n.code,{children:"npm"}),", ",(0,r.jsx)(n.code,{children:"python"}),", ",(0,r.jsx)(n.code,{children:"java"}),", etc on different environments"]}),"\n",(0,r.jsx)(n.h2,{id:"goofys-fuse-file-system-for-s3",children:"Goofys fuse file system for S3"}),"\n",(0,r.jsx)(n.p,{children:"Follow blog with tag goofys for more information. It is simply making a cloud storage (compatible S3) to be worked as local file system with nearly full POSIX support"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# goofys\nif [ ! -f "$RIVER_BIN/goofys"  ]; then\n    echo "Installing goofys..."\n    curl -L https://github.com/kahing/goofys/releases/download/v${GOOFYS_VERSION}/goofys -o $RIVER_BIN/goofys\n    chmod +x $RIVER_BIN/goofys\nelse\n    echo "Goofys already exists at: $HOME/.river/bin"\n    goofys --help 2> /dev/null\nfi\n'})}),"\n",(0,r.jsx)(n.h2,{id:"improve-your-shell-experience",children:"Improve your shell experience"}),"\n",(0,r.jsxs)(n.p,{children:["Install the zsh and related extensions. Here is the standard ones, but you can find more about ",(0,r.jsx)(n.strong,{children:"zsh"}),"[",(0,r.jsx)(n.a,{href:"https://ohmyz.sh/",children:"https://ohmyz.sh/"}),"]"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'eval "$(micromamba shell hook --shell bash)"\nmicromamba activate river\nsh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended\n\n# plugins\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n\n# Update .zshrc\necho "Updating .zshrc..."\nsed -i "s|plugins=(git)|plugins=(\\n    git\\n    docker\\n    docker-compose\\n    history\\n    rsync\\n    safe-paste\\n    zsh-autosuggestions\\n    zsh-syntax-highlighting\\n)\\n|" ~/.zshrc\nsource ~/.zshrc\n'})}),"\n",(0,r.jsx)(n.p,{children:"Now you can see how it improve your experiences;"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Your systax is highlighted to show it correctly work"}),"\n",(0,r.jsx)(n.li,{children:"Your history can be quickly reused"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"zsh",src:i(7990).A+"",width:"1310",height:"273"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Figure 2:"})," zsh improves your shell experiences"]}),"\n",(0,r.jsxs)(n.h2,{id:"activate-all-by-riversh",children:["Activate all by ",(0,r.jsx)(n.code,{children:".river.sh"})]}),"\n",(0,r.jsxs)(n.p,{children:["Create the file called ",(0,r.jsx)(n.code,{children:".river.sh"})," then you can activate all standard setup"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Create .river.sh for environment variables\ncat <<EOF > $HOME/.river.sh\nexport HOME=${HOME}\nexport HOME_TOOLS=\\${HOME}/.river/bin\nexport MAMBA_ROOT_PREFIX=\\${HOME}/.river/images/micromamba\nexport SINGULARITY_CACHE_DIR=\\${HOME}/.river/images/singularities\nexport NXF_SINGULARITY_CACHEDIR=\\$SINGULARITY_CACHE_DIR/images\nexport PATH=\\${HOME_TOOLS}:\\$PATH\neval "\\$(micromamba shell hook -s posix)"\nmicromamba activate -n river\nzsh \nsource ~/.zshrc\nEOF\n'})}),"\n",(0,r.jsxs)(n.p,{children:["You can activate absolutely when you are login by ",(0,r.jsx)(n.code,{children:"~/.bashrc"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"source ~/.river.sh\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},7385:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/micromamba-9a03e32a5bbecf7e90672be926a8a5a0.png"},7990:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/zsh-2aaf5e3a5ba08158d0690b0127c04c23.png"},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(6540);const r={},a=s.createContext(r);function t(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(a.Provider,{value:n},e.children)}},8455:e=>{e.exports=JSON.parse('{"permalink":"/river-docs/blog/setup-shell-remote-server","source":"@site/blog/2025-03-30/setup-remote-server.md","title":"Hack your shell environment","description":"Setting up a shell environment on a remote server can be a tedious process, especially when dealing with multiple dependencies. This one also can be used for your local machine.","date":"2025-03-30T00:00:00.000Z","tags":[{"inline":true,"label":"zsh","permalink":"/river-docs/blog/tags/zsh"},{"inline":true,"label":"river","permalink":"/river-docs/blog/tags/river"},{"inline":true,"label":"micromamba","permalink":"/river-docs/blog/tags/micromamba"}],"readingTime":4.14,"hasTruncateMarker":true,"authors":[{"name":"Thanh-Giang (River) Tan Nguyen","title":"Software and bioinformatics engineer","url":"https://www.facebook.com/nttg8100","page":{"permalink":"/river-docs/blog/authors/river"},"email":"nttg8100@gmail.com","socials":{"linkedin":"https://www.linkedin.com/in/thanh-giang-tan-nguyen-761b28190/","github":"https://github.com/nttg8100"},"imageURL":"https://avatars.githubusercontent.com/u/64969412?v=4","key":"river"}],"frontMatter":{"slug":"setup-shell-remote-server","title":"Hack your shell environment","authors":["river"],"tags":["zsh","river","micromamba"]},"unlisted":false,"nextItem":{"title":"SSH remote tunnel","permalink":"/river-docs/blog/ssh-remote-tunnel"}}')}}]);