"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3792],{739:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/add_account-29ee0d7948684467ad5ebbaf8ac1b09c.png"},1528:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/memory_before_stress-3a4b03c93c2340876dc5a870fe15d2e7.png"},2261:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/sacct_disable-3536da7262517e12af0bb6c732d8d3ea.png"},4229:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/oom-06f78a37e67a2fb7a3547efffd709e59.png"},4522:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/slurmd_status-27a3e648f8da8db229ed803a5229e185.png"},4830:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/add_db-12d303160989d2beda2434df173597ee.png"},6930:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"high-performance-computing/how-to-build-slurm-single-node-with-full-functions","title":"Single Node Slurm Setup","description":"cluster","source":"@site/docs/3.high-performance-computing/3.how-to-build-slurm-single-node-with-full-functions.md","sourceDirName":"3.high-performance-computing","slug":"/high-performance-computing/how-to-build-slurm-single-node-with-full-functions","permalink":"/river-docs/docs/high-performance-computing/how-to-build-slurm-single-node-with-full-functions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/river-docs/docs/high-performance-computing/slurm-architecture"},"next":{"title":"Scalable HPC","permalink":"/river-docs/docs/category/scalable-hpc"}}');var l=n(4848),c=n(8453);const t={},i="Single Node Slurm Setup",o={},a=[{value:"<strong>Install <code>slurmd</code> and <code>slurmctld</code></strong>",id:"install-slurmd-and-slurmctld",level:2},{value:"<strong>Prepare <code>slurm.conf</code></strong>",id:"prepare-slurmconf",level:2},{value:"<strong>Start Basic Slurm Services</strong>",id:"start-basic-slurm-services",level:2},{value:"<strong>Limit Resources Using cgroups</strong>",id:"limit-resources-using-cgroups",level:2},{value:"<strong>Enable Slurm Accounting</strong>",id:"enable-slurm-accounting",level:2},{value:"Install <code>slurmdbd</code>",id:"install-slurmdbd",level:3},{value:"Configure <code>slurmdbd.conf</code>",id:"configure-slurmdbdconf",level:3},{value:"Create the Database",id:"create-the-database",level:3},{value:"Start <code>slurmdbd</code> Service",id:"start-slurmdbd-service",level:3},{value:"Submit a Job and View Metrics",id:"submit-a-job-and-view-metrics",level:3},{value:"<strong>Conclusion</strong>",id:"conclusion",level:2}];function d(e){const s={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"single-node-slurm-setup",children:"Single Node Slurm Setup"})}),"\n",(0,l.jsx)("div",{align:"center",children:(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(7106).A+"",width:"590",height:"540"})})})}),"\n",(0,l.jsx)(s.admonition,{type:"info",children:(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"This architecture is designed for a single node running Ubuntu 20.04."}),"\n",(0,l.jsx)(s.li,{children:"It supports all standard Slurm features."}),"\n",(0,l.jsx)(s.li,{children:"The setup is manual to help you understand how Slurm works. Note that users can utilize resources without submitting jobs, so this configuration is not recommended for production environments."}),"\n"]})}),"\n",(0,l.jsx)(s.h2,{id:"install-slurmd-and-slurmctld",children:(0,l.jsxs)(s.strong,{children:["Install ",(0,l.jsx)(s.code,{children:"slurmd"})," and ",(0,l.jsx)(s.code,{children:"slurmctld"})]})}),"\n",(0,l.jsx)(s.p,{children:"Install the required software:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo apt-get update -y && sudo apt-get install -y slurmd slurmctld\n"})}),"\n",(0,l.jsx)(s.p,{children:"Verify the installation:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"# Locate slurmd and slurmctld\nwhich slurmd\n# Output: /usr/sbin/slurmd\nwhich slurmctld\n# Output: /usr/sbin/slurmctld\n"})}),"\n",(0,l.jsx)(s.h2,{id:"prepare-slurmconf",children:(0,l.jsxs)(s.strong,{children:["Prepare ",(0,l.jsx)(s.code,{children:"slurm.conf"})]})}),"\n",(0,l.jsx)(s.admonition,{type:"info",children:(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"This configuration applies to all nodes."}),"\n"]})}),"\n",(0,l.jsxs)(s.p,{children:["Create the ",(0,l.jsx)(s.code,{children:"slurm.conf"})," file:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"cat <<EOF > slurm.conf\n# slurm.conf for a single-node Slurm cluster with accounting\nClusterName=localcluster\nSlurmctldHost=localhost\nMpiDefault=none\nProctrackType=proctrack/linuxproc\nReturnToService=2\nSlurmctldPidFile=/run/slurmctld.pid\nSlurmctldPort=6817\nSlurmdPidFile=/run/slurmd.pid\nSlurmdPort=6818\nSlurmdSpoolDir=/var/lib/slurm-llnl/slurmd\nSlurmUser=slurm\nStateSaveLocation=/var/lib/slurm-llnl/slurmctld\nSwitchType=switch/none\nTaskPlugin=task/none\n\n# TIMERS\nInactiveLimit=0\nKillWait=30\nMinJobAge=300\nSlurmctldTimeout=120\nSlurmdTimeout=300\nWaittime=0\n\n# SCHEDULING\nSchedulerType=sched/backfill\nSelectType=select/cons_tres\nSelectTypeParameters=CR_Core\n\n# ACCOUNTING (slurmdbd, not enabled now)\nAccountingStorageType=accounting_storage/none\nJobAcctGatherType=jobacct_gather/none\nJobAcctGatherFrequency=30\n\n# LOGGING\nSlurmctldDebug=info\nSlurmctldLogFile=/var/log/slurm-llnl/slurmctld.log\nSlurmdDebug=info\nSlurmdLogFile=/var/log/slurm-llnl/slurmd.log\n\n# COMPUTE NODES (Single-node configuration)\nNodeName=localhost CPUs=2 Sockets=1 CoresPerSocket=2 ThreadsPerCore=1 RealMemory=1024 State=UNKNOWN\n\n# PARTITION CONFIGURATION\nPartitionName=LocalQ Nodes=ALL Default=YES MaxTime=INFINITE State=UP\nEOF\n"})}),"\n",(0,l.jsx)(s.p,{children:"Move the file to the correct location:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo mv slurm.conf /etc/slurm-llnl/slurm.conf\n"})}),"\n",(0,l.jsx)(s.h2,{id:"start-basic-slurm-services",children:(0,l.jsx)(s.strong,{children:"Start Basic Slurm Services"})}),"\n",(0,l.jsxs)(s.p,{children:["Start the ",(0,l.jsx)(s.code,{children:"slurmd"})," service:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"# Start the service\nsudo service slurmd start\n# Check its status\nsudo service slurmd status\n"})}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(4522).A+"",width:"1310",height:"351"})})}),"\n",(0,l.jsxs)(s.p,{children:["Start the ",(0,l.jsx)(s.code,{children:"slurmctld"})," service:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"# Start the service\nsudo service slurmctld start\n# Check its status\nsudo service slurmctld status\n"})}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(8237).A+"",width:"1310",height:"351"})})}),"\n",(0,l.jsx)(s.p,{children:"Submit a small job (adjust CPUs and memory as needed):"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:'srun --mem 500MB -c 1 --pty bash\n# Check details of submitted jobs\nsqueue -o "%i %P %u %T %M %l %D %C %m %R %Z %N" | column -t\n'})}),"\n",(0,l.jsx)(s.p,{children:"Before submitting the job, memory usage is less than 200MB:"}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(1528).A+"",width:"2432",height:"434"})})}),"\n",(0,l.jsx)(s.p,{children:"Allocate 100MB of memory repeatedly:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"declare -a mem\ni=0\n\nwhile :; do\n    mem[$i]=$(head -c 100M </dev/zero | tr '\\000' 'x') \n    ((i++))\n    echo \"Allocated: $((i * 100)) MB\"\ndone\n"})}),"\n",(0,l.jsx)(s.p,{children:"After allocating 1GB, the job is not killed due to missing control group (cgroup) configuration:"}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(7534).A+"",width:"2432",height:"434"})})}),"\n",(0,l.jsx)(s.h2,{id:"limit-resources-using-cgroups",children:(0,l.jsx)(s.strong,{children:"Limit Resources Using cgroups"})}),"\n",(0,l.jsxs)(s.p,{children:["Create a ",(0,l.jsx)(s.code,{children:"cgroup.conf"})," file to restrict resource usage:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"cat <<EOF >cgroup.conf\nCgroupAutomount=yes\nCgroupMountpoint=/sys/fs/cgroup\nConstrainCores=yes\nConstrainRAMSpace=yes\nConstrainDevices=yes\nConstrainSwapSpace=yes\nMaxSwapPercent=5\nMemorySwappiness=0\nEOF\n"})}),"\n",(0,l.jsx)(s.p,{children:"Move the file to the correct directory:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo mv cgroup.conf /etc/slurm-llnl/cgroup.conf\n"})}),"\n",(0,l.jsxs)(s.p,{children:["Update ",(0,l.jsx)(s.code,{children:"slurm.conf"})," to enable cgroup plugins:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:'sudo sed -i -e "s|ProctrackType=proctrack/linuxproc|ProctrackType=proctrack/cgroup|" \\\n            -e "s|TaskPlugin=task/none|TaskPlugin=task/cgroup|" /etc/slurm-llnl/slurm.conf\n'})}),"\n",(0,l.jsx)(s.p,{children:"Enable cgroup in GRUB and reboot:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo sed -i 's/^GRUB_CMDLINE_LINUX=\"/GRUB_CMDLINE_LINUX=\"cgroup_enable=memory swapaccount=1 /' /etc/default/grub\nsudo update-grub\nsudo reboot\n"})}),"\n",(0,l.jsx)(s.p,{children:"Restart Slurm services:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo service slurmctld restart\nsudo service slurmd restart\n"})}),"\n",(0,l.jsx)(s.p,{children:"Rerun the memory allocation job. This time, the job will be killed when it exceeds the memory limit:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"srun --mem 500MB -c 1 --pty bash\ndeclare -a mem\ni=0\n\nwhile :; do\n    mem[$i]=$(head -c 100M </dev/zero | tr '\\000' 'x') \n    ((i++))\n    echo \"Allocated: $((i * 100)) MB\"\ndone\n"})}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(4229).A+"",width:"1305",height:"434"})})}),"\n",(0,l.jsx)(s.h2,{id:"enable-slurm-accounting",children:(0,l.jsx)(s.strong,{children:"Enable Slurm Accounting"})}),"\n",(0,l.jsx)(s.p,{children:"Accounting allows monitoring of jobs, resource allocation, and permissions."}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(2261).A+"",width:"1310",height:"351"})})}),"\n",(0,l.jsxs)(s.h3,{id:"install-slurmdbd",children:["Install ",(0,l.jsx)(s.code,{children:"slurmdbd"})]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo apt-get install slurmdbd mariadb-server -y\n"})}),"\n",(0,l.jsxs)(s.h3,{id:"configure-slurmdbdconf",children:["Configure ",(0,l.jsx)(s.code,{children:"slurmdbd.conf"})]}),"\n",(0,l.jsx)(s.admonition,{type:"info",children:(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"Enables the accounting plugin to store account information."}),"\n",(0,l.jsx)(s.li,{children:"Maps Linux users to Slurm accounts. Users cannot submit jobs without being added."}),"\n",(0,l.jsx)(s.li,{children:"Useful for monitoring jobs and optimizing resource usage."}),"\n"]})}),"\n",(0,l.jsxs)(s.p,{children:["Create the ",(0,l.jsx)(s.code,{children:"slurmdbd.conf"})," file:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"cat <<EOF >slurmdbd.conf\nPidFile=/run/slurmdbd.pid\nLogFile=/var/log/slurm/slurmdbd.log\nDebugLevel=error\nDbdHost=localhost\nDbdPort=6819\n\n# DB connection data\nStorageType=accounting_storage/mysql\nStorageHost=localhost\nStoragePort=3306\nStorageUser=slurm\nStoragePass=slurm\nStorageLoc=slurm_acct_db\nSlurmUser=slurm\nEOF\n"})}),"\n",(0,l.jsx)(s.p,{children:"Move the file to the correct location:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo mv slurmdbd.conf /etc/slurm-llnl/slurmdbd.conf\n"})}),"\n",(0,l.jsx)(s.h3,{id:"create-the-database",children:"Create the Database"}),"\n",(0,l.jsx)(s.p,{children:"Create the database and user:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo service mysql start\nsudo mysql -e \"CREATE DATABASE slurm_acct_db;\" && \\\nsudo mysql -e \"CREATE USER 'slurm'@'localhost' IDENTIFIED BY 'slurm';\" && \\\nsudo mysql -e \"GRANT ALL PRIVILEGES ON slurm_acct_db.* TO 'slurm'@'localhost';\" && \\\nsudo mysql -e \"FLUSH PRIVILEGES;\"\n"})}),"\n",(0,l.jsx)(s.p,{children:"Verify the database and user:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:'sudo mysql -e "SHOW DATABASES;" \nsudo mysql -e "SELECT User, Host FROM mysql.user;"\nsudo mysql -e "SHOW GRANTS FOR \'slurm\'@\'localhost\';"\n'})}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(4830).A+"",width:"1314",height:"539"})})}),"\n",(0,l.jsxs)(s.h3,{id:"start-slurmdbd-service",children:["Start ",(0,l.jsx)(s.code,{children:"slurmdbd"})," Service"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo service slurmdbd start\n"})}),"\n",(0,l.jsxs)(s.p,{children:["Update ",(0,l.jsx)(s.code,{children:"slurm.conf"})," to enable accounting:"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:'sudo sed -i -e "s|AccountingStorageType=accounting_storage/none|AccountingStorageType=accounting_storage/slurmdbd\\nAccountingStorageEnforce=associations,limits,qos\\nAccountingStorageHost=localhost\\nAccountingStoragePort=6819|" /etc/slurm-llnl/slurm.conf \nsudo sed -i -e "s|JobAcctGatherType=jobacct_gather/none|JobAcctGatherType=jobacct_gather/cgroup|" /etc/slurm-llnl/slurm.conf\nsudo systemctl restart slurmctl slurmd\n'})}),"\n",(0,l.jsx)(s.p,{children:"Add Linux users to Slurm accounting:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo sacctmgr -i add cluster localcluster\nsudo sacctmgr -i --quiet add account $USER Cluster=localcluster\nsudo sacctmgr -i --quiet add user $USER account=$USER DefaultAccount=root\nsudo systemctl restart slurmctl slurmd\n"})}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(739).A+"",width:"1327",height:"511"})})}),"\n",(0,l.jsx)(s.h3,{id:"submit-a-job-and-view-metrics",children:"Submit a Job and View Metrics"}),"\n",(0,l.jsx)(s.p,{children:"Submit a job:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"srun --mem 500MB -c 1 --pty bash\n"})}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(739).A+"",width:"1327",height:"511"})})}),"\n",(0,l.jsx)(s.h2,{id:"conclusion",children:(0,l.jsx)(s.strong,{children:"Conclusion"})}),"\n",(0,l.jsx)(s.admonition,{type:"info",children:(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"Slurm is widely used in academic and industrial settings for orchestrating distributed jobs across multiple nodes."}),"\n",(0,l.jsx)(s.li,{children:"While Slurm is relatively easy to set up, critical steps like resource limits and accounting are often overlooked."}),"\n",(0,l.jsx)(s.li,{children:"Slurm integrates seamlessly with distributed computing frameworks like Spark, Ray, Dask, and Flink, enabling efficient resource utilization for local development."}),"\n"]})})]})}function u(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},7106:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/Slurm_logo-aa681ab3230b0e3101ed236f97071acb.svg"},7534:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/overresource_limit-4d711b28cf5adccae532ca1c9aa28286.png"},8237:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/slurmctld_status-4e7ed6630174c2f0bc017d60c84c72f1.png"},8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>i});var r=n(6540);const l={},c=r.createContext(l);function t(e){const s=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),r.createElement(c.Provider,{value:s},e.children)}}}]);