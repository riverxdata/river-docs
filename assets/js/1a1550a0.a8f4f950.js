"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[443],{1186:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/slurm_arch-83c1c084e3e6e81e2babfd383b976d6d.gif"},3302:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/HPC_architecture-41812b9d27b4da09fa4b92ab9cabd700.png"},6275:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"HPC/Slurm","title":"Overview","description":"cluster","source":"@site/docs/3.HPC/1.Slurm.md","sourceDirName":"3.HPC","slug":"/HPC/Slurm","permalink":"/river-docs/docs/HPC/Slurm","draft":false,"unlisted":false,"editUrl":"https://github.com/riverxdata/docs/3.HPC/1.Slurm.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Remote Server","permalink":"/river-docs/docs/Administration/Remote_server"},"next":{"title":"Architecture","permalink":"/river-docs/docs/HPC/Architect"}}');var r=i(4848),t=i(8453);const a={},l="Overview",o={},d=[{value:"PBS and PBS Pro",id:"pbs-and-pbs-pro",level:3},{value:"Grid Engine (SGE, Open Grid Scheduler, UGE)",id:"grid-engine-sge-open-grid-scheduler-uge",level:3},{value:"LSF (IBM Spectrum LSF)",id:"lsf-ibm-spectrum-lsf",level:3},{value:"Why Use SLURM?",id:"why-use-slurm",level:2},{value:"Alternative Cluster Management Systems",id:"alternative-cluster-management-systems",level:2},{value:"PBS and PBS Pro",id:"pbs-and-pbs-pro-1",level:3},{value:"Why Use SLURM?",id:"why-use-slurm-1",level:3}];function c(e){const n={a:"a",admonition:"admonition",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,r.jsx)("figure",{markdown:"span",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"cluster",src:i(3302).A+"",width:"1440",height:"960"})})}),"\n",(0,r.jsxs)(n.p,{children:["source: ",(0,r.jsx)(n.a,{href:"https://www.marquette.edu/high-performance-computing/architecture.php",children:"https://www.marquette.edu/high-performance-computing/architecture.php"})]}),"\n",(0,r.jsx)(n.p,{children:"Several job schedulers are used in HPC environments, including:"}),"\n",(0,r.jsx)(n.h3,{id:"pbs-and-pbs-pro",children:"PBS and PBS Pro"}),"\n",(0,r.jsx)(n.p,{children:"PBS (Portable Batch System) and its commercial version, PBS Pro, provide job queuing, scheduling, and resource management. They are widely used in academia and industry, offering features similar to SLURM."}),"\n",(0,r.jsx)(n.h3,{id:"grid-engine-sge-open-grid-scheduler-uge",children:"Grid Engine (SGE, Open Grid Scheduler, UGE)"}),"\n",(0,r.jsx)(n.p,{children:"Originally developed as Sun Grid Engine, this system is used for job scheduling and workload management in distributed computing environments. It is known for its ease of use and flexibility."}),"\n",(0,r.jsx)(n.h3,{id:"lsf-ibm-spectrum-lsf",children:"LSF (IBM Spectrum LSF)"}),"\n",(0,r.jsx)(n.p,{children:"IBM's Spectrum LSF (Load Sharing Facility) is a powerful job scheduler with advanced features, including predictive scheduling, high availability, and deep integration with enterprise systems. However, it is a commercial product."}),"\n",(0,r.jsx)(n.h2,{id:"why-use-slurm",children:"Why Use SLURM?"}),"\n",(0,r.jsx)(n.p,{children:"SLURM is a preferred choice for many HPC environments due to its key advantages:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Open Source"}),": Unlike some alternatives, SLURM is free to use and has a large, active community contributing to its development and support."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scalability"}),": SLURM is designed to scale efficiently from small clusters to the world's largest supercomputers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flexibility"}),": It allows fine-grained control over job scheduling, resource allocation, and priority settings, making it adaptable to various workloads."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integration"}),": SLURM integrates well with other HPC tools, such as MPI (Message Passing Interface) and resource monitoring systems, ensuring smooth workflow management."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance"}),": SLURM is optimized for high throughput and minimal overhead, making it efficient for large-scale computing tasks."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Overall, SLURM's open-source nature, scalability, flexibility, and integration capabilities make it an excellent choice for managing HPC workloads."}),"\n",(0,r.jsx)(n.p,{children:"This document describes the architecture of a SLURM-based High-Performance Computing (HPC) cluster. The cluster is configured with essential components, including:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SLURM (Simple Linux Utility for Resource Management)"})," for job scheduling and workload management."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NFS (Network File System)"})," for shared storage across nodes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NIS-LDAP (Network Information Service - Lightweight Directory Access Protocol)"})," for centralized user authentication and management."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Compute nodes"})," for executing jobs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Head node (Controller)"})," for managing job scheduling and cluster operations."]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"This architecture is designed for small clusters. For large clusters, it can be designed to have multiple, independent controller and login nodes."})}),"\n",(0,r.jsx)("figure",{markdown:"span",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"cluster",src:i(1186).A+"",width:"811",height:"681"})})}),"\n",(0,r.jsxs)(n.p,{children:["source: ",(0,r.jsx)(n.a,{href:"https://www.schedmd.com/",children:"https://www.schedmd.com/"})]}),"\n",(0,r.jsx)(n.h2,{id:"alternative-cluster-management-systems",children:"Alternative Cluster Management Systems"}),"\n",(0,r.jsx)(n.h3,{id:"pbs-and-pbs-pro-1",children:"PBS and PBS Pro"}),"\n",(0,r.jsx)(n.p,{children:"PBS (Portable Batch System) and its commercial version, PBS Pro, are other popular job scheduling and workload management systems used in HPC environments. They provide similar functionalities to SLURM, such as job queuing, scheduling, and resource management."}),"\n",(0,r.jsx)(n.h3,{id:"why-use-slurm-1",children:"Why Use SLURM?"}),"\n",(0,r.jsx)(n.p,{children:"While PBS and PBS Pro are robust and widely used, SLURM offers several advantages:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Open Source"}),": SLURM is open-source software, which means it is free to use and has a large community for support and development."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scalability"}),": SLURM is designed to scale efficiently from small clusters to the world's largest supercomputers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flexibility"}),": SLURM provides a high degree of flexibility in configuring and managing resources, making it suitable for a wide range of HPC workloads."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integration"}),": SLURM integrates well with other HPC tools and technologies, providing a seamless user experience."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Overall, SLURM's open-source nature, scalability, flexibility, and integration capabilities make it a preferred choice for many HPC environments."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var s=i(6540);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);