"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[792],{739:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/add_account-29ee0d7948684467ad5ebbaf8ac1b09c.png"},1528:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/memory_before_stress-3a4b03c93c2340876dc5a870fe15d2e7.png"},2261:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/sacct_disable-3536da7262517e12af0bb6c732d8d3ea.png"},4229:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/oom-06f78a37e67a2fb7a3547efffd709e59.png"},4522:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/slurmd_status-27a3e648f8da8db229ed803a5229e185.png"},4830:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/add_db-12d303160989d2beda2434df173597ee.png"},6930:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"high-performance-computing/how-to-build-slurm-single-node-with-full-functions","title":"Single node","description":"cluster","source":"@site/docs/3.high-performance-computing/3.how-to-build-slurm-single-node-with-full-functions.md","sourceDirName":"3.high-performance-computing","slug":"/high-performance-computing/how-to-build-slurm-single-node-with-full-functions","permalink":"/river-docs/docs/high-performance-computing/how-to-build-slurm-single-node-with-full-functions","draft":false,"unlisted":false,"editUrl":"https://github.com/riverxdata/docs/3.high-performance-computing/3.how-to-build-slurm-single-node-with-full-functions.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/river-docs/docs/high-performance-computing/slurm-architecture"},"next":{"title":"Scalable HPC","permalink":"/river-docs/docs/category/scalable-hpc"}}');var l=n(4848),t=n(8453);const c={},i="Single node",o={},a=[{value:"<strong>Install slurmd, slurmctld</strong>",id:"install-slurmd-slurmctld",level:2},{value:"<strong>Prepare slurm.conf</strong>",id:"prepare-slurmconf",level:2},{value:"<strong>Start basic slurm</strong>",id:"start-basic-slurm",level:2},{value:"<strong>Limit resource by cgroup</strong>",id:"limit-resource-by-cgroup",level:2},{value:"<strong>Enable slurm accounting</strong>",id:"enable-slurm-accounting",level:2},{value:"Install slurmdbd",id:"install-slurmdbd",level:3},{value:"Prepare slurmdbd.conf",id:"prepare-slurmdbdconf",level:3},{value:"Create an sql database",id:"create-an-sql-database",level:3},{value:"Start slurmdbd service",id:"start-slurmdbd-service",level:3},{value:"Submit new job and get the metrics",id:"submit-new-job-and-get-the-metrics",level:3},{value:"<strong>Conclusion</strong>",id:"conclusion",level:2}];function d(e){const s={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"single-node",children:"Single node"})}),"\n",(0,l.jsx)("div",{align:"center",children:(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(7106).A+"",width:"590",height:"540"})})})}),"\n",(0,l.jsx)(s.admonition,{type:"info",children:(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"This architect is designed for single node on the Ubuntu 20.04"}),"\n",(0,l.jsx)(s.li,{children:"Allow all of the standard features"}),"\n",(0,l.jsx)(s.li,{children:"Do it manually to help you understand how Slurm work. The user can use resource without submitting job, so should not used it for production"}),"\n"]})}),"\n",(0,l.jsx)(s.h2,{id:"install-slurmd-slurmctld",children:(0,l.jsx)(s.strong,{children:"Install slurmd, slurmctld"})}),"\n",(0,l.jsx)(s.p,{children:"Install base softwares"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo apt-get update -y && sudo apt-get install -y slurmd slurmctld\n"})}),"\n",(0,l.jsx)(s.p,{children:"Check required installed packages"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"# find where slurmd/slurmctld is installed\nwhich slurmd\n# /usr/sbin/slurmd\nwhich slurmctld\n# /usr/sbin/slurmctld\n"})}),"\n",(0,l.jsx)(s.h2,{id:"prepare-slurmconf",children:(0,l.jsx)(s.strong,{children:"Prepare slurm.conf"})}),"\n",(0,l.jsx)(s.admonition,{type:"info",children:(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"Config for all nodes."}),"\n"]})}),"\n",(0,l.jsx)(s.p,{children:"On your terminal create this file"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"cat <<EOF > slurm.conf\n# slurm.conf for a single-node Slurm cluster with accounting\nClusterName=localcluster\nSlurmctldHost=localhost\nMpiDefault=none\nProctrackType=proctrack/linuxproc\nReturnToService=2\nSlurmctldPidFile=/run/slurmctld.pid\nSlurmctldPort=6817\nSlurmdPidFile=/run/slurmd.pid\nSlurmdPort=6818\nSlurmdSpoolDir=/var/lib/slurm-llnl/slurmd\nSlurmUser=slurm\nStateSaveLocation=/var/lib/slurm-llnl/slurmctld\nSwitchType=switch/none\nTaskPlugin=task/none\n\n# TIMERS\nInactiveLimit=0\nKillWait=30\nMinJobAge=300\nSlurmctldTimeout=120\nSlurmdTimeout=300\nWaittime=0\n\n# SCHEDULING\nSchedulerType=sched/backfill\nSelectType=select/cons_tres\nSelectTypeParameters=CR_Core\n\n# ACCOUNTING (slurmdbd, not enable now)\n\nAccountingStorageType=accounting_storage/none\nJobAcctGatherType=jobacct_gather/none\nJobAcctGatherFrequency=30\n\n# LOGGING\nSlurmctldDebug=info\nSlurmctldLogFile=/var/log/slurm-llnl/slurmctld.log\nSlurmdDebug=info\nSlurmdLogFile=/var/log/slurm-llnl/slurmd.log\n# COMPUTE NODES (Single-node configuration)\nNodeName=localhost CPUs=2 Sockets=1 CoresPerSocket=2 ThreadsPerCore=1 RealMemory=1024 State=UNKNOWN\n\n# PARTITION CONFIGURATION\nPartitionName=LocalQ Nodes=ALL Default=YES MaxTime=INFINITE State=UP\nEOF\n"})}),"\n",(0,l.jsx)(s.p,{children:"Move file to correct location"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo mv slurm.conf /etc/slurm-llnl/slurm.conf\n"})}),"\n",(0,l.jsx)(s.h2,{id:"start-basic-slurm",children:(0,l.jsx)(s.strong,{children:"Start basic slurm"})}),"\n",(0,l.jsx)(s.p,{children:"Start slurmd service"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"# start\nsudo service slurmd start\n# check status\nsudo service slurmd status\n"})}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(4522).A+"",width:"1310",height:"351"})})}),"\n",(0,l.jsx)(s.p,{children:"Start slurmctld service"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"# start\nsudo service slurmctld start\n# check status\nsudo service slurmctld status\n"})}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(8237).A+"",width:"1310",height:"351"})})}),"\n",(0,l.jsx)(s.p,{children:"Submit a small job, adjust the cpus and memory accordin to your resource"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:'srun --mem 500MB -c 1 --pty bash\n# checking detail on submitted job\nsqueue -o "%i %P %u %T %M %l %D %C %m %R %Z %N" | column -t\n'})}),"\n",(0,l.jsx)(s.p,{children:"Before submitting job, it takes less than 200MB RAM"}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(1528).A+"",width:"2432",height:"434"})})}),"\n",(0,l.jsx)(s.p,{children:"Allocate the 100MB everytime to memory to array"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"declare -a mem\ni=0\n\nwhile :; do\n    mem[$i]=$(head -c 100M </dev/zero | tr '\\000' 'x') \n    ((i++))\n    echo \"Allocated: $((i * 100)) MB\"\ndone\n"})}),"\n",(0,l.jsx)(s.p,{children:"Memory after loading 1GB, it is weird because of it should be out of memory. But the slurm seems to not to be killed. It is because this setup and similar setup on single node\nforget to add the control group plugin to control the computing resources. It does not work as you expected. It this cluste"}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(7534).A+"",width:"2432",height:"434"})})}),"\n",(0,l.jsx)(s.h2,{id:"limit-resource-by-cgroup",children:(0,l.jsx)(s.strong,{children:"Limit resource by cgroup"})}),"\n",(0,l.jsx)(s.p,{children:"Prepare cgroup config file, restrict on the swap region, if the process is out of memory, it will be"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"cat <<EOF >cgroup.conf\nCgroupAutomount=yes\nCgroupMountpoint=/sys/fs/cgroup\nConstrainCores=yes\nConstrainRAMSpace=yes\nConstrainDevices=yes\nConstrainSwapSpace=yes\nMaxSwapPercent=5\nMemorySwappiness=0\nEOF\n"})}),"\n",(0,l.jsx)(s.p,{children:"Move to correct directory"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo mv cgroup.conf /etc/slurm-llnl/cgroup.conf\n"})}),"\n",(0,l.jsx)(s.p,{children:"Add your task plugin to slurm config"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:'# sed to replace\nsudo sed -i -e "s|ProctrackType=proctrack/linuxproc|ProctrackType=proctrack/cgroup|" -e "s|TaskPlugin=task/none|TaskPlugin=task/cgroup|" /etc/slurm-llnl/slurm.conf\n# add cgroup to grub to enable it, reboot is required\nsudo sed -i \'s/^GRUB_CMDLINE_LINUX="/GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1 /\' /etc/default/grub\nsudo update-grub\nsudo reboot\n# restart all services\nsudo service slurmctld status\nsudo service slurmd status\n'})}),"\n",(0,l.jsx)(s.p,{children:"Rerun the small memory job, that will exeed the memory limit, you job will be killed as expected"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"srun --mem 500MB -c 1 --pty bash\ndeclare -a mem\ni=0\n\nwhile :; do\n    mem[$i]=$(head -c 100M </dev/zero | tr '\\000' 'x')  # Allocate 100MB at a time\n    ((i++))\n    echo \"Allocated: $((i * 100)) MB\"\ndone\n"})}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(4229).A+"",width:"1305",height:"434"})})}),"\n",(0,l.jsx)(s.h2,{id:"enable-slurm-accounting",children:(0,l.jsx)(s.strong,{children:"Enable slurm accounting"})}),"\n",(0,l.jsx)(s.p,{children:"To monitor old job, to track the resource allocation, permissons to launch job. The accounting should be enable."}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(2261).A+"",width:"1310",height:"351"})})}),"\n",(0,l.jsx)(s.h3,{id:"install-slurmdbd",children:"Install slurmdbd"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo apt-get install slurmdbd mariadb-server -y\n"})}),"\n",(0,l.jsx)(s.h3,{id:"prepare-slurmdbdconf",children:"Prepare slurmdbd.conf"}),"\n",(0,l.jsx)(s.admonition,{type:"info",children:(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"Is is used to enable the accounting plugin. It allows to store the relative account informations."}),"\n",(0,l.jsx)(s.li,{children:"Mapping the linux user to the relative accounts in slurm account database. Users can not submit job directly if they are not added"}),"\n",(0,l.jsx)(s.li,{children:"It is useful for monitor existed jobs to optimize the usage"}),"\n"]})}),"\n",(0,l.jsx)(s.p,{children:"Create slurmdbd.conf"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"cat <<EOF >slurmdbd.conf\nPidFile=/run/slurmdbd.pid\nLogFile=/var/log/slurm/slurmdbd.log\nDebugLevel=error\nDbdHost=localhost\nDbdPort=6819\n\n# DB connection data\nStorageType=accounting_storage/mysql\nStorageHost=localhost\nStoragePort=3306\nStorageUser=slurm\nStoragePass=slurm\nStorageLoc=slurm_acct_db\nSlurmUser=slurm\nEOF\n"})}),"\n",(0,l.jsx)(s.p,{children:"Move the config file to the correct location"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo mv slurmdbd.conf /etc/slurm-llnl/slurmdbd.conf\n"})}),"\n",(0,l.jsx)(s.h3,{id:"create-an-sql-database",children:"Create an sql database"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"Create relative db with credentials specify in the slurmdbd.conf\n```bash\nsudo service mysql start\nsudo mysql -e \"CREATE DATABASE slurm_acct_db;\" && \\\nsudo mysql -e \"CREATE USER 'slurm'@'localhost' IDENTIFIED BY 'slurm';\" && \\\nsudo mysql -e \"GRANT ALL PRIVILEGES ON slurm_acct_db.* TO 'slurm'@'localhost';\" && \\\nsudo mysql -e \"FLUSH PRIVILEGES;\"\n"})}),"\n",(0,l.jsx)(s.p,{children:"Checking the database"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:'# Verify the database and user creation\nsudo mysql -e "SHOW DATABASES;" \nsudo mysql -e "SELECT User, Host FROM mysql.user;"\n# Check privileges for the slurm user\nsudo mysql -e "SHOW GRANTS FOR \'slurm\'@\'localhost\';"\n'})}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(4830).A+"",width:"1314",height:"539"})})}),"\n",(0,l.jsx)(s.h3,{id:"start-slurmdbd-service",children:"Start slurmdbd service"}),"\n",(0,l.jsx)(s.p,{children:"Start slurmdbd service to allow the slurmctl to interact with it"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"sudo service slurmdbd start\n"})}),"\n",(0,l.jsx)(s.p,{children:"Enable in slurm.conf"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:'sudo sed -i -e "s|AccountingStorageType=accounting_storage/none|AccountingStorageType=accounting_storage/slurmdbd\\nAccountingStorageEnforce=associations,limits,qos\\nAccountingStorageHost=localhost\\nAccountingStoragePort=6819|" /etc/slurm-llnl/slurm.conf \n# gather acct from cgroup\nsudo sed -i -e "s|JobAcctGatherType=jobacct_gather/none|JobAcctGatherType=jobacct_gather/cgroup|" /etc/slurm-llnl/slurm.conf\n# restart service from slurmd, slurmctl\nsudo systemctl restart slurmctl slurmd\n'})}),"\n",(0,l.jsx)(s.p,{children:"Add the linux users to accounting-where the linux user will be granted to the relative permission to run job"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"# $USER will be the current users\nsudo sacctmgr -i add cluster localcluster\nsudo sacctmgr -i --quiet add account $USER Cluster=localcluster\nsudo sacctmgr -i --quiet add user $USER account=$USER DefaultAccount=root\n# restart again\nsudo systemctl restart slurmctl slurmd\n"})}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(739).A+"",width:"1327",height:"511"})})}),"\n",(0,l.jsx)(s.h3,{id:"submit-new-job-and-get-the-metrics",children:"Submit new job and get the metrics"}),"\n",(0,l.jsx)(s.p,{children:"Get relative information"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-bash",children:"srun --mem 500MB -c 1 --pty bash\n"})}),"\n",(0,l.jsx)("figure",{markdown:"span",children:(0,l.jsx)(s.p,{children:(0,l.jsx)(s.img,{alt:"cluster",src:n(739).A+"",width:"1327",height:"511"})})}),"\n",(0,l.jsx)(s.h2,{id:"conclusion",children:(0,l.jsx)(s.strong,{children:"Conclusion"})}),"\n",(0,l.jsx)(s.admonition,{type:"info",children:(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"Slurm is a widely used orchestrator in both academic and industrial settings. It facilitates running distributed jobs across multiple computers and aggregating results to address real-world problems."}),"\n",(0,l.jsx)(s.li,{children:"While Slurm is relatively easy to set up, some critical steps are often overlooked. For instance, resource requests and limits may not function as expected without proper configuration."}),"\n",(0,l.jsx)(s.li,{children:"Slurm integrates seamlessly with various distributed computing frameworks such as Spark, Ray, Dask, and Flink enabling efficient and effective resource utilization for local development."}),"\n"]})})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},7106:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/Slurm_logo-aa681ab3230b0e3101ed236f97071acb.svg"},7534:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/overresource_limit-4d711b28cf5adccae532ca1c9aa28286.png"},8237:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/slurmctld_status-4e7ed6630174c2f0bc017d60c84c72f1.png"},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>i});var r=n(6540);const l={},t=r.createContext(l);function c(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);