<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>RiverXData Blog</title>
        <link>https://riverxdata.github.ios/river-docs/blog</link>
        <description>RiverXData Blog</description>
        <lastBuildDate>Sun, 30 Mar 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Hack your shell environment]]></title>
            <link>https://riverxdata.github.ios/river-docs/blog/setup-shell-remote-server</link>
            <guid>https://riverxdata.github.ios/river-docs/blog/setup-shell-remote-server</guid>
            <pubDate>Sun, 30 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Setting up a shell environment on a remote server can be a tedious process, especially when dealing with multiple dependencies. This one also can be used for your local machine.]]></description>
            <content:encoded><![CDATA[<p>Setting up a shell environment on a remote server can be a tedious process, especially when dealing with multiple dependencies. This one also can be used for your local machine.
This guide walks you through installing <strong>micromamba</strong>, setting up a River environment, and configuring useful tools like <strong>goofys</strong> to work with cloud storage  (S3) and zsh (amazing shell)
<img decoding="async" loading="lazy" alt="zsh" src="https://riverxdata.github.ios/river-docs/assets/images/zsh-2aaf5e3a5ba08158d0690b0127c04c23.png" width="1310" height="273" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="set-up-variables">Set up variables<a href="https://riverxdata.github.ios/river-docs/blog/setup-shell-remote-server#set-up-variables" class="hash-link" aria-label="Direct link to Set up variables" title="Direct link to Set up variables">​</a></h2>
<p>It will define a hard version for installing goofys, micromamba. You can adjust to update latest version</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo "River software dependencies setup"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MICROMAMBA_VERSION=2.0.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">GOOFYS_VERSION=0.24.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RIVER_BIN=$HOME/.river/bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p $RIVER_BIN</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="install-micromamba">Install micromamba<a href="https://riverxdata.github.ios/river-docs/blog/setup-shell-remote-server#install-micromamba" class="hash-link" aria-label="Direct link to Install micromamba" title="Direct link to Install micromamba">​</a></h2>
<p>Micromamba is a lightweight, fast alternative to Conda for managing environments and packages.
It is a small, standalone executable that provides the same package management features as Conda but with much lower overhead. Unlike Conda, Micromamba does not require a full Anaconda installation, making it ideal for minimal setups, CI/CD pipelines, and remote servers.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Key Features:</p><ul>
<li>Fast and lightweight: Much smaller than Conda, with a quick installation process.</li>
<li>Standalone executable: No need for a full Conda installation.</li>
<li>Supports Conda environments: Fully compatible with Conda packages and repositories.</li>
<li>Works in remote/cloud environments: Ideal for automation and scripting</li>
</ul></div></div>
<p>Create an environmen call <code>river</code> that helps to install common software without required <code>sudo</code> permision, install based on user space:</p>
<ul>
<li>Python (from Anaconda) for scripting and development.</li>
<li>R-base for statistical computing and bioinformatics applications.</li>
<li>Singularity (v3.8.6) for containerized workflows. The singularity has the image is similar to a file, it is portable, has a great integration with the host system</li>
<li>Nextflow to enable scalable and reproducible scientific workflows.</li>
<li>Zsh for a better shell experience.</li>
</ul>
<p>AWS CLI to interact with AWS services like S3.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Base softwares</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># micromamba</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export HOME=$HOME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export MICROMAMBA_EXECUTE=$HOME/.river/bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=$HOME/.river/bin:$PATH</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p $MICROMAMBA_EXECUTE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [ ! -f "$RIVER_BIN/micromamba"  ]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "Installing micromamba..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/$MICROMAMBA_VERSION | tar -xvj bin/micromamba</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mv bin/micromamba $RIVER_BIN/micromamba</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rm -rf bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">else</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "micromamba already exists at: $HOME/.river/bin"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Start up</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH="$HOME/.river/bin:$PATH"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export MAMBA_ROOT_PREFIX="$HOME/.river/images/micromamba"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Create the singularity dir</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">mkdir -p $HOME/.river/images/singularities/images</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Create micromamba environment and install river-utils</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">micromamba create -n river \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    anaconda::python \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    conda-forge::r-base \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    conda-forge::singularity=3.8.6 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    bioconda::nextflow \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    conda-forge::zsh \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    conda-forge::awscli \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -y</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="activate-environment">Activate environment<a href="https://riverxdata.github.ios/river-docs/blog/setup-shell-remote-server#activate-environment" class="hash-link" aria-label="Direct link to Activate environment" title="Direct link to Activate environment">​</a></h3>
<p>To install additional software, you can install it in the <code>river</code> environment or create a new environment. Below is an example of how to activate the <code>river</code> environment and install additional software.
It is based on conda, what you need to do is searching for your softwares. Almost are hosted on the <a href="https://anaconda.org/" target="_blank" rel="noopener noreferrer"><strong>conda</strong></a>. Find the command and replace <code>conda</code> with <code>micromamba</code>.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Activate the river environment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">eval "$(micromamba shell hook --shell bash)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">micromamba activate river</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Install additional software</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">micromamba install -n river \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    conda-forge::htop \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    conda-forge::jq \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    conda-forge::tree \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -y</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="create-new-environment">Create new environment<a href="https://riverxdata.github.ios/river-docs/blog/setup-shell-remote-server#create-new-environment" class="hash-link" aria-label="Direct link to Create new environment" title="Direct link to Create new environment">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Create a new environment and install Python</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">micromamba create -n new_env \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    anaconda::python=3.9 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Activate the new environment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">micromamba activate new_env</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Verify Python installation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">python --version</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" alt="micromamba" src="https://riverxdata.github.ios/river-docs/assets/images/micromamba-9a03e32a5bbecf7e90672be926a8a5a0.png" width="1310" height="273" class="img_ev3q"></p>
<p><strong>Figure 1:</strong> Micromamba helps to setup your perfect working environments on remote server</p>
<p>In this example:</p>
<ul>
<li><code>new_env</code>: The name of the new environment.</li>
<li><code>python=3.9</code>: Specifies the version of Python to install. You can adjust the version as needed.</li>
</ul>
<p>This allows you to create isolated environments for different projects or dependencies. It is good practice to install tools in different environemnts.
If you develop web application, install <code>npm</code>, <code>python</code>, <code>java</code>, etc on different environments</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="goofys-fuse-file-system-for-s3">Goofys fuse file system for S3<a href="https://riverxdata.github.ios/river-docs/blog/setup-shell-remote-server#goofys-fuse-file-system-for-s3" class="hash-link" aria-label="Direct link to Goofys fuse file system for S3" title="Direct link to Goofys fuse file system for S3">​</a></h2>
<p>Follow blog with tag goofys for more information. It is simply making a cloud storage (compatible S3) to be worked as local file system with nearly full POSIX support</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># goofys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if [ ! -f "$RIVER_BIN/goofys"  ]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "Installing goofys..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    curl -L https://github.com/kahing/goofys/releases/download/v${GOOFYS_VERSION}/goofys -o $RIVER_BIN/goofys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    chmod +x $RIVER_BIN/goofys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">else</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "Goofys already exists at: $HOME/.river/bin"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    goofys --help 2&gt; /dev/null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="improve-your-shell-experience">Improve your shell experience<a href="https://riverxdata.github.ios/river-docs/blog/setup-shell-remote-server#improve-your-shell-experience" class="hash-link" aria-label="Direct link to Improve your shell experience" title="Direct link to Improve your shell experience">​</a></h2>
<p>Install the zsh and related extensions. Here is the standard ones, but you can find more about <strong>zsh</strong>[<a href="https://ohmyz.sh/" target="_blank" rel="noopener noreferrer">https://ohmyz.sh/</a>]</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">eval "$(micromamba shell hook --shell bash)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">micromamba activate river</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># plugins</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Update .zshrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">echo "Updating .zshrc..."</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sed -i "s|plugins=(git)|plugins=(\n    git\n    docker\n    docker-compose\n    history\n    rsync\n    safe-paste\n    zsh-autosuggestions\n    zsh-syntax-highlighting\n)\n|" ~/.zshrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">source ~/.zshrc</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now you can see how it improve your experiences;</p>
<ul>
<li>Your systax is highlighted to show it correctly work</li>
<li>Your history can be quickly reused</li>
</ul>
<p><img decoding="async" loading="lazy" alt="zsh" src="https://riverxdata.github.ios/river-docs/assets/images/zsh-2aaf5e3a5ba08158d0690b0127c04c23.png" width="1310" height="273" class="img_ev3q"></p>
<p><strong>Figure 2:</strong> zsh improves your shell experiences</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="activate-all-by-riversh">Activate all by <code>.river.sh</code><a href="https://riverxdata.github.ios/river-docs/blog/setup-shell-remote-server#activate-all-by-riversh" class="hash-link" aria-label="Direct link to activate-all-by-riversh" title="Direct link to activate-all-by-riversh">​</a></h2>
<p>Create the file called <code>.river.sh</code> then you can activate all standard setup</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Create .river.sh for environment variables</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;&lt;EOF &gt; $HOME/.river.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export HOME=${HOME}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export HOME_TOOLS=\${HOME}/.river/bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export MAMBA_ROOT_PREFIX=\${HOME}/.river/images/micromamba</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export SINGULARITY_CACHE_DIR=\${HOME}/.river/images/singularities</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export NXF_SINGULARITY_CACHEDIR=\$SINGULARITY_CACHE_DIR/images</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=\${HOME_TOOLS}:\$PATH</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">eval "\$(micromamba shell hook -s posix)"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">micromamba activate -n river</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">zsh </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">source ~/.zshrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>You can activate absolutely when you are login by <code>~/.bashrc</code></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">source ~/.river.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <author>nttg8100@gmail.com (Thanh-Giang (River) Tan Nguyen)</author>
            <category>zsh</category>
            <category>river</category>
            <category>micromamba</category>
        </item>
        <item>
            <title><![CDATA[SSH remote tunnel]]></title>
            <link>https://riverxdata.github.ios/river-docs/blog/ssh-remote-tunnel</link>
            <guid>https://riverxdata.github.ios/river-docs/blog/ssh-remote-tunnel</guid>
            <pubDate>Sat, 29 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[When working on a remote High-Performance Computing (HPC) cluster or a cloud server, accessing development tools locally can be challenging.]]></description>
            <content:encoded><![CDATA[<p>When working on a remote High-Performance Computing (HPC) cluster or a cloud server, accessing development tools locally can be challenging.
One effective approach is to use an SSH tunnel to securely access a galaxy server-a web platform as if it were running on your local machine.
<img decoding="async" loading="lazy" alt="Processes in Computer" src="https://riverxdata.github.ios/river-docs/assets/images/remote_server-8dd77a5f760e7d364bb93cda0db780d2.webp" width="646" height="288" class="img_ev3q"></p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><ul>
<li>Replace with your host and port for ssh</li>
<li>Run any web on specific port, then forward this web service via ssh to access at your local machine</li>
<li>Require to install <a href="https://docs.docker.com/engine/install/" target="_blank" rel="noopener noreferrer"><strong>docker</strong></a>. For more details on, please visit <a href="https://github.com/bgruening/docker-galaxy" target="_blank" rel="noopener noreferrer"><strong>galaxy docker</strong></a></li>
</ul></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-use-ssh-tunneling">Why Use SSH Tunneling?<a href="https://riverxdata.github.ios/river-docs/blog/ssh-remote-tunnel#why-use-ssh-tunneling" class="hash-link" aria-label="Direct link to Why Use SSH Tunneling?" title="Direct link to Why Use SSH Tunneling?">​</a></h2>
<p>SSH tunneling allows you to securely forward ports from a remote server to your local system. This is useful for accessing services that are running on the remote machine without exposing them to the internet.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="login-to-your-remote-server">Login to your remote server<a href="https://riverxdata.github.ios/river-docs/blog/ssh-remote-tunnel#login-to-your-remote-server" class="hash-link" aria-label="Direct link to Login to your remote server" title="Direct link to Login to your remote server">​</a></h2>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ssh river@platform.riverxdata.com</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="run-a-web-service">Run a web service<a href="https://riverxdata.github.ios/river-docs/blog/ssh-remote-tunnel#run-a-web-service" class="hash-link" aria-label="Direct link to Run a web service" title="Direct link to Run a web service">​</a></h2>
<p>It can be accessed at localhost 8080
Run galaxy server- a web platform for bioinformatics:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker run -d -p 8080:80 \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    -v ./galaxy_storage/:/export/ \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    quay.io/bgruening/galaxy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The web is now available on a remote system on the port 8080, docker bind the port of the web is running at 80 on the container.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="test-the-web-service">Test the web service<a href="https://riverxdata.github.ios/river-docs/blog/ssh-remote-tunnel#test-the-web-service" class="hash-link" aria-label="Direct link to Test the web service" title="Direct link to Test the web service">​</a></h2>
<p>Test the web service at 8080</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl localhost -p 8080</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" alt="Processes in Computer" src="https://riverxdata.github.ios/river-docs/assets/images/login_and_run_web-24a5a3a292db3a3696623f6825a2c2ac.png" width="1310" height="858" class="img_ev3q"></p>
<p><strong>Figure 1:</strong> Login and start galaxy server using docker on remote machine</p>
<p>Now you can access the galaxy at your local computer via ssh. With the local machine will access this network at port 8081 which is remoted from 8080 of the <code>platform.riverxdata.com</code></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ssh -N -L 8081:localhost:8080 platform.riverxdata.com</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Open your web brower to see how it work
<img decoding="async" loading="lazy" alt="Processes in Computer" src="https://riverxdata.github.ios/river-docs/assets/images/galaxy_local-947c498ef4075cff0a973fe6de1737e7.png" width="2552" height="1362" class="img_ev3q">
<strong>Figure 2:</strong> Access your web service at local machine</p>]]></content:encoded>
            <author>nttg8100@gmail.com (Thanh-Giang (River) Tan Nguyen)</author>
            <category>hpc</category>
            <category>ssh</category>
            <category>network</category>
            <category>slurm</category>
        </item>
        <item>
            <title><![CDATA[Python thread: deep dive]]></title>
            <link>https://riverxdata.github.ios/river-docs/blog/python-thread</link>
            <guid>https://riverxdata.github.ios/river-docs/blog/python-thread</guid>
            <pubDate>Fri, 28 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Modern computers are designed to handle multitasking, enabling you to run multiple programs simultaneously. But have you ever wondered how computers manage this complexity?]]></description>
            <content:encoded><![CDATA[<p>Modern computers are designed to handle multitasking, enabling you to run multiple programs simultaneously. But have you ever wondered how computers manage this complexity?</p>
<p>In programming, Python is one of the most popular languages, and it supports multitasking through multiple processes and threads. However, Python has a unique feature that might lead to inefficient usage if not understood properly. Let’s dive in and explore.</p>
<p><img decoding="async" loading="lazy" alt="Processes in Computer" src="https://riverxdata.github.ios/river-docs/assets/images/process_by_htop-a8992f582881779b2f1b11225f0aae5a.png" width="1314" height="373" class="img_ev3q"><br>
<strong>Figure 1:</strong> A system monitor displaying process IDs (PIDs), user ownership, and resource consumption (e.g., memory and CPU).</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-a-process-in-computing">What Is a Process in Computing?<a href="https://riverxdata.github.ios/river-docs/blog/python-thread#what-is-a-process-in-computing" class="hash-link" aria-label="Direct link to What Is a Process in Computing?" title="Direct link to What Is a Process in Computing?">​</a></h2>
<p>A process is an instance of a program being executed by a computer. It includes the program's code, data, and allocated system resources. Each process operates <strong>independently</strong> in its own memory space and can spawn multiple threads for concurrent execution.</p>
<p>The operating system is responsible for managing processes, enabling them to communicate, <strong>schedule CPU time</strong>, and <strong>share resources</strong> efficiently.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="thread-in-python">Thread in python<a href="https://riverxdata.github.ios/river-docs/blog/python-thread#thread-in-python" class="hash-link" aria-label="Direct link to Thread in python" title="Direct link to Thread in python">​</a></h2>
<p>In Python, a thread runs within a single process and is managed by that process. A single process can run multiple threads, and these threads share computing
resources such as CPU and memory. However, due to Python’s Global Interpreter Lock (GIL), threads are restricted to executing on a single CPU core at a time,
even if multiple CPU cores are available.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>What, why and how python requires GIL ?</p><ul>
<li>The Global Interpreter Lock (GIL) is a mechanism in CPython that ensures only one thread executes Python bytecode at a time, even on multi-core processors.</li>
<li>It prevents race conditions in memory management but limits true parallel execution for CPU-bound tasks. To achieve real parallelism, multiprocessing should be used instead of threading.</li>
</ul></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-gil-and-how-thread-in-python-work-">What is GIL and how thread in python work ?<a href="https://riverxdata.github.ios/river-docs/blog/python-thread#what-is-gil-and-how-thread-in-python-work-" class="hash-link" aria-label="Direct link to What is GIL and how thread in python work ?" title="Direct link to What is GIL and how thread in python work ?">​</a></h2>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>warning</div><div class="admonitionContent_BuS1"><p>This is the proof of concept for the python3 lower than 3.13. From python 3.13, the GIL can be disabled, with evenly higher performance with cpu-bound tasks while sharing the same resource (memory,etc)</p></div></div>
<p>The <strong>Global Interpreter Lock (GIL)</strong> is a mechanism in Python that manages thread execution by allowing only <strong>one thread to run at a time</strong>, even on multi-core processors.
Although multiple threads can be created, they do not achieve true parallelism for CPU-bound tasks due to the GIL.</p>
<p>However, Python threads can still improve performance for <strong>I/O-bound tasks</strong> like downloading or uploading files because the CPU spends most of its time waiting for external resources.
The Python interpreter quickly <strong>switches between threads</strong>, saving and restoring their states, making it appear as if multiple threads are running simultaneously.
In reality, the <strong>CPU rapidly cycles through threads</strong>, ensuring that tasks that do not require significant computation feel like they are running in parallel.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="simple-process-with-thread-in-python">Simple process with thread in python<a href="https://riverxdata.github.ios/river-docs/blog/python-thread#simple-process-with-thread-in-python" class="hash-link" aria-label="Direct link to Simple process with thread in python" title="Direct link to Simple process with thread in python">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="simple-program">Simple program<a href="https://riverxdata.github.ios/river-docs/blog/python-thread#simple-program" class="hash-link" aria-label="Direct link to Simple program" title="Direct link to Simple program">​</a></h3>
<ul>
<li>A simple function in python, create 2 files as below <code>single_worker.py</code>. Then you can duplicate the <code>worker</code> step, it is similar in real world problem when you have IO tasks likes
downloading multiple files</li>
<li>Here to make it easier, I uses <code>sleep</code> which is similar.</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">download_file(&lt;file_url_1&gt;)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">download_file(&lt;file_url_2&gt;)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>single_worker.py</strong></p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">worker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">task_id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> duration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""Simulate work by sleeping for `duration` seconds."""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Thread-</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">task_id</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> started"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sleep</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">duration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Thread-</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">task_id</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> finished"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># execute</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">start_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">worker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Total execution time: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">end_time </span><span class="token string-interpolation interpolation operator" style="color:#393A34">-</span><span class="token string-interpolation interpolation"> start_time</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">:</span><span class="token string-interpolation interpolation format-spec">.2f</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> seconds"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>sequential_worker.py</strong></p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">worker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">task_id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> duration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""Simulate work by sleeping for `duration` seconds."""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Thread-</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">task_id</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> started"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sleep</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">duration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Thread-</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">task_id</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> finished"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># execute</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">start_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">worker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># duplicate</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">worker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">end_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Total execution time: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">end_time </span><span class="token string-interpolation interpolation operator" style="color:#393A34">-</span><span class="token string-interpolation interpolation"> start_time</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">:</span><span class="token string-interpolation interpolation format-spec">.2f</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> seconds"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Run and test the time to executes</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">python3 single_worker.py</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">python3 sequential_worker.py</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" alt="Simple program" src="https://riverxdata.github.ios/river-docs/assets/images/simple-e25ecaf3eb4b87aa296c2d1625182bd3.png" width="880" height="207" class="img_ev3q"></p>
<p><strong>Figure 2:</strong> Execute the simple programs</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><ul>
<li>For these functions, it is bad practice run them sequentially. You may automatically to use the <code>loop</code>, it reduces number of lines in script,
but it takes your times while you can do it <strong>much more better</strong></li>
</ul></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="multiple-threads">Multiple threads<a href="https://riverxdata.github.ios/river-docs/blog/python-thread#multiple-threads" class="hash-link" aria-label="Direct link to Multiple threads" title="Direct link to Multiple threads">​</a></h3>
<ul>
<li>Create the file with content below, name it with <code>multiple_thread.py</code></li>
</ul>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> sys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> threading</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">worker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">task_id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> duration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""Simulate work by sleeping for `duration` seconds."""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Thread-</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">task_id</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> started"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sleep</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">duration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Thread-</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">task_id</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> finished"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">run_threads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">num_threads</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> duration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""Create and start multiple threads."""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    threads </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    start_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token builtin">range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">num_threads</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        thread </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> threading</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Thread</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">target</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">worker</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> args</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> duration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        threads</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">thread</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        thread</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> thread </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> threads</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        thread</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Wait for all threads to finish</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    end_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Total execution time: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">end_time </span><span class="token string-interpolation interpolation operator" style="color:#393A34">-</span><span class="token string-interpolation interpolation"> start_time</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">:</span><span class="token string-interpolation interpolation format-spec">.2f</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> seconds"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"__main__"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    run_threads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>Run with threads</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">python3 multiple_thread.py &lt;number of threads&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" alt="2 threads" src="https://riverxdata.github.ios/river-docs/assets/images/thread-f88d2e2dde98ebd8ded80062690cb4eb.png" width="880" height="575" class="img_ev3q"></p>
<p><strong>Figure 3:</strong> Multiple threads that you don't need to wait them sequentially</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="number-of-cpus-and-number-of-threads-">Number of cpus and number of threads ?<a href="https://riverxdata.github.ios/river-docs/blog/python-thread#number-of-cpus-and-number-of-threads-" class="hash-link" aria-label="Direct link to Number of cpus and number of threads ?" title="Direct link to Number of cpus and number of threads ?">​</a></h3>
<ul>
<li>
<p>It’s useful to see how multiple threads can improve execution time, but the performance gain does not depend on the number of CPUs.
I ran the program with 1000 threads, and the results showed that for non-CPU-bound tasks, using many threads is fine—but excessive threads should be used with caution.</p>
</li>
<li>
<p>Even with more threads, they still need to share resources like internet bandwidth, and switching between threads adds overhead.
As a result, the execution time was 1.23s instead of 1s, showing that too many threads can slow things down.</p>
</li>
<li>
<p>In general, for CPU-bound tasks, the number of threads should match the number of CPUs.
However, for I/O-bound tasks like network requests, you can experiment with more threads to maximize efficiency.
Instead of waiting 1000 seconds, the task completed in 1.23s—a significant speedup! 🚀</p>
</li>
</ul>
<p><img decoding="async" loading="lazy" alt="1000 threads" src="https://riverxdata.github.ios/river-docs/assets/images/1k_threads-318ee9c311aaf32edaf3ac717124b037.png" width="880" height="575" class="img_ev3q"></p>
<p><strong>Figure 3:</strong> 1000 threads in 1.23s</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="bump-when-you-use-threads-with-cpus-tasks-">Bump! When you use threads with cpus tasks ?<a href="https://riverxdata.github.ios/river-docs/blog/python-thread#bump-when-you-use-threads-with-cpus-tasks-" class="hash-link" aria-label="Direct link to Bump! When you use threads with cpus tasks ?" title="Direct link to Bump! When you use threads with cpus tasks ?">​</a></h3>
<p>It does not reduces time to execute. Because it requires process to use a cpu to compute. Overall, it should not be used in cpu-bound tasks.
Create a file with content as below, name it with <code>cpu_thread.py</code>.</p>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>warning</div><div class="admonitionContent_BuS1"><p>Avoid using threads for CPU-bound tasks, as they often increase execution time without providing linear performance improvements.</p></div></div>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> threading</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> sys</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">cpu_task</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""Simulate a CPU-bound task by performing heavy computations."""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Thread-</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">n</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> started"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    count </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> _ </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token builtin">range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">10</span><span class="token operator" style="color:#393A34">**</span><span class="token number" style="color:#36acaa">7</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Simulate CPU-intensive work</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        count </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Thread-</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">n</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> finished"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">run_threads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">num_threads</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:#e3116c">"""Create and start multiple CPU-bound threads."""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    threads </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    start_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token builtin">range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">num_threads</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        thread </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> threading</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Thread</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">target</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">cpu_task</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> args</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        threads</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">thread</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        thread</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> thread </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> threads</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        thread</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic"># Wait for all threads to finish</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    end_time </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-interpolation string" style="color:#e3116c">f"Total execution time: </span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">{</span><span class="token string-interpolation interpolation">end_time </span><span class="token string-interpolation interpolation operator" style="color:#393A34">-</span><span class="token string-interpolation interpolation"> start_time</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">:</span><span class="token string-interpolation interpolation format-spec">.2f</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">}</span><span class="token string-interpolation string" style="color:#e3116c"> seconds"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> __name__ </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"__main__"</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    run_threads</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sys</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" alt="cpu thread" src="https://riverxdata.github.ios/river-docs/assets/images/cpu_thread-18cee598d0feb6f8b97b4848c1855fca.png" width="640" height="691" class="img_ev3q"></p>
<p><strong>Figure 4:</strong> Use threads are crazy in python with cpu bound tasks</p>]]></content:encoded>
            <author>nttg8100@gmail.com (Thanh-Giang (River) Tan Nguyen)</author>
            <category>python</category>
        </item>
        <item>
            <title><![CDATA[Single Node Slurm Setup]]></title>
            <link>https://riverxdata.github.ios/river-docs/blog/single-node-slurm-setup</link>
            <guid>https://riverxdata.github.ios/river-docs/blog/single-node-slurm-setup</guid>
            <pubDate>Fri, 14 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[cluster]]></description>
            <content:encoded><![CDATA[<p><img decoding="async" loading="lazy" alt="cluster" src="https://riverxdata.github.ios/river-docs/assets/images/Slurm_logo-aa681ab3230b0e3101ed236f97071acb.svg" width="590" height="540" class="img_ev3q"></p>
<p>SLURM (Simple Linux Utility for Resource Management) is a powerful open-source workload manager commonly used in high-performance computing (HPC) environments. While it is typically deployed across multi-node clusters, setting up SLURM on a single node can be highly beneficial for testing, development, or running lightweight workloads. This guide will help you understand the fundamental concepts of how a scheduler operates and provide a step-by-step walkthrough to configure SLURM with full functionality on a single-node setup.</p>
<p><strong>How to Set Up a Fully Functional SLURM Cluster on a Single Node (with Proper Resource Constraints)</strong>
SLURM is a powerful job scheduler widely used in HPC environments, but configuring it properly—especially on a single-node cluster—can be tricky. Many tutorials cover the basics, like installing SLURM and running jobs, but they often overlook a critical aspect: cgroups (control groups).</p>
<p>Without proper cgroup configuration, SLURM may fail to enforce CPU and memory constraints, allowing jobs to consume more resources than allocated. This can lead to performance degradation, system crashes, or unexpected behavior.</p>
<p>In this guide, I’ll walk you through setting up a fully functional SLURM cluster on a single node, ensuring that CPU and memory limits are properly enforced using cgroups. Whether you're setting up a test environment or a lightweight HPC system, this tutorial will help you avoid common pitfalls and ensure that SLURM effectively manages resources as expected.</p>
<p>Let’s dive in</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><ul>
<li>This architecture is designed for a single node running Ubuntu 20.04.</li>
<li>It supports all standard Slurm features.</li>
<li>The setup is manual to help you understand how Slurm works. Note that users can utilize resources without submitting jobs, so this configuration is not recommended for production environments.</li>
</ul></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="install-slurmd-and-slurmctld"><strong>Install <code>slurmd</code> and <code>slurmctld</code></strong><a href="https://riverxdata.github.ios/river-docs/blog/single-node-slurm-setup#install-slurmd-and-slurmctld" class="hash-link" aria-label="Direct link to install-slurmd-and-slurmctld" title="Direct link to install-slurmd-and-slurmctld">​</a></h2>
<p>Install the required software:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt-get update -y &amp;&amp; sudo apt-get install -y slurmd slurmctld</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Verify the installation:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Locate slurmd and slurmctld</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">which slurmd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Output: /usr/sbin/slurmd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">which slurmctld</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Output: /usr/sbin/slurmctld</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="prepare-slurmconf"><strong>Prepare <code>slurm.conf</code></strong><a href="https://riverxdata.github.ios/river-docs/blog/single-node-slurm-setup#prepare-slurmconf" class="hash-link" aria-label="Direct link to prepare-slurmconf" title="Direct link to prepare-slurmconf">​</a></h2>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><ul>
<li>This configuration applies to all nodes.</li>
</ul></div></div>
<p>Create the <code>slurm.conf</code> file:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;&lt;EOF &gt; slurm.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># slurm.conf for a single-node Slurm cluster with accounting</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ClusterName=localcluster</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmctldHost=localhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MpiDefault=none</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ProctrackType=proctrack/linuxproc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ReturnToService=2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmctldPidFile=/run/slurmctld.pid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmctldPort=6817</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmdPidFile=/run/slurmd.pid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmdPort=6818</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmdSpoolDir=/var/lib/slurm-llnl/slurmd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmUser=slurm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">StateSaveLocation=/var/lib/slurm-llnl/slurmctld</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SwitchType=switch/none</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">TaskPlugin=task/none</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># TIMERS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">InactiveLimit=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">KillWait=30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MinJobAge=300</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmctldTimeout=120</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmdTimeout=300</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Waittime=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># SCHEDULING</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SchedulerType=sched/backfill</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SelectType=select/cons_tres</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SelectTypeParameters=CR_Core</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># ACCOUNTING (slurmdbd, not enabled now)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">AccountingStorageType=accounting_storage/none</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">JobAcctGatherType=jobacct_gather/none</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">JobAcctGatherFrequency=30</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># LOGGING</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmctldDebug=info</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmctldLogFile=/var/log/slurm-llnl/slurmctld.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmdDebug=info</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmdLogFile=/var/log/slurm-llnl/slurmd.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># COMPUTE NODES (Single-node configuration)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NodeName=localhost CPUs=2 Sockets=1 CoresPerSocket=2 ThreadsPerCore=1 RealMemory=1024 State=UNKNOWN</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># PARTITION CONFIGURATION</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PartitionName=LocalQ Nodes=ALL Default=YES MaxTime=INFINITE State=UP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Move the file to the correct location:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo mv slurm.conf /etc/slurm-llnl/slurm.conf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="start-basic-slurm-services"><strong>Start Basic Slurm Services</strong><a href="https://riverxdata.github.ios/river-docs/blog/single-node-slurm-setup#start-basic-slurm-services" class="hash-link" aria-label="Direct link to start-basic-slurm-services" title="Direct link to start-basic-slurm-services">​</a></h2>
<p>Start the <code>slurmd</code> service:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Start the service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo service slurmd start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Check its status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo service slurmd status</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<figure markdown="span"><p><img decoding="async" loading="lazy" alt="cluster" src="https://riverxdata.github.ios/river-docs/assets/images/slurmd_status-27a3e648f8da8db229ed803a5229e185.png" width="1310" height="351" class="img_ev3q"></p></figure>
<p>Start the <code>slurmctld</code> service:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Start the service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo service slurmctld start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Check its status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo service slurmctld status</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<figure markdown="span"><p><img decoding="async" loading="lazy" alt="cluster" src="https://riverxdata.github.ios/river-docs/assets/images/slurmctld_status-4e7ed6630174c2f0bc017d60c84c72f1.png" width="1310" height="351" class="img_ev3q"></p></figure>
<p>Submit a small job (adjust CPUs and memory as needed):</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">srun --mem 500MB -c 1 --pty bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Check details of submitted jobs</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">squeue -o "%i %P %u %T %M %l %D %C %m %R %Z %N" | column -t</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Before submitting the job, memory usage is less than 200MB:</p>
<figure markdown="span"><p><img decoding="async" loading="lazy" alt="cluster" src="https://riverxdata.github.ios/river-docs/assets/images/memory_before_stress-3a4b03c93c2340876dc5a870fe15d2e7.png" width="2432" height="434" class="img_ev3q"></p></figure>
<p>Allocate 100MB of memory repeatedly:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">declare -a mem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">i=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">while :; do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mem[$i]=$(head -c 100M &lt;/dev/zero | tr '\000' 'x') </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ((i++))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "Allocated: $((i * 100)) MB"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>After allocating 1GB, the job is not killed due to missing control group (cgroup) configuration:</p>
<figure markdown="span"><p><img decoding="async" loading="lazy" alt="cluster" src="https://riverxdata.github.ios/river-docs/assets/images/overresource_limit-4d711b28cf5adccae532ca1c9aa28286.png" width="2432" height="434" class="img_ev3q"></p></figure>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="limit-resources-using-cgroups"><strong>Limit Resources Using cgroups</strong><a href="https://riverxdata.github.ios/river-docs/blog/single-node-slurm-setup#limit-resources-using-cgroups" class="hash-link" aria-label="Direct link to limit-resources-using-cgroups" title="Direct link to limit-resources-using-cgroups">​</a></h2>
<p>Create a <code>cgroup.conf</code> file to restrict resource usage:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;&lt;EOF &gt;cgroup.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CgroupAutomount=yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">CgroupMountpoint=/sys/fs/cgroup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ConstrainCores=yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ConstrainRAMSpace=yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ConstrainDevices=yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ConstrainSwapSpace=yes</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MaxSwapPercent=5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">MemorySwappiness=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Move the file to the correct directory:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo mv cgroup.conf /etc/slurm-llnl/cgroup.conf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Update <code>slurm.conf</code> to enable cgroup plugins:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo sed -i -e "s|ProctrackType=proctrack/linuxproc|ProctrackType=proctrack/cgroup|" \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            -e "s|TaskPlugin=task/none|TaskPlugin=task/cgroup|" /etc/slurm-llnl/slurm.conf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Enable cgroup in GRUB and reboot:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo sed -i 's/^GRUB_CMDLINE_LINUX="/GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1 /' /etc/default/grub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo update-grub</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo reboot</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Restart Slurm services:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo service slurmctld restart</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo service slurmd restart</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Rerun the memory allocation job. This time, the job will be killed when it exceeds the memory limit:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">srun --mem 500MB -c 1 --pty bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">declare -a mem</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">i=0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">while :; do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    mem[$i]=$(head -c 100M &lt;/dev/zero | tr '\000' 'x') </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ((i++))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "Allocated: $((i * 100)) MB"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<figure markdown="span"><p><img decoding="async" loading="lazy" alt="cluster" src="https://riverxdata.github.ios/river-docs/assets/images/oom-06f78a37e67a2fb7a3547efffd709e59.png" width="1305" height="434" class="img_ev3q"></p></figure>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="enable-slurm-accounting"><strong>Enable Slurm Accounting</strong><a href="https://riverxdata.github.ios/river-docs/blog/single-node-slurm-setup#enable-slurm-accounting" class="hash-link" aria-label="Direct link to enable-slurm-accounting" title="Direct link to enable-slurm-accounting">​</a></h2>
<p>Accounting allows monitoring of jobs, resource allocation, and permissions.</p>
<figure markdown="span"><p><img decoding="async" loading="lazy" alt="cluster" src="https://riverxdata.github.ios/river-docs/assets/images/sacct_disable-3536da7262517e12af0bb6c732d8d3ea.png" width="1310" height="351" class="img_ev3q"></p></figure>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="install-slurmdbd">Install <code>slurmdbd</code><a href="https://riverxdata.github.ios/river-docs/blog/single-node-slurm-setup#install-slurmdbd" class="hash-link" aria-label="Direct link to install-slurmdbd" title="Direct link to install-slurmdbd">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo apt-get install slurmdbd mariadb-server -y</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="configure-slurmdbdconf">Configure <code>slurmdbd.conf</code><a href="https://riverxdata.github.ios/river-docs/blog/single-node-slurm-setup#configure-slurmdbdconf" class="hash-link" aria-label="Direct link to configure-slurmdbdconf" title="Direct link to configure-slurmdbdconf">​</a></h3>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><ul>
<li>Enables the accounting plugin to store account information.</li>
<li>Maps Linux users to Slurm accounts. Users cannot submit jobs without being added.</li>
<li>Useful for monitoring jobs and optimizing resource usage.</li>
</ul></div></div>
<p>Create the <code>slurmdbd.conf</code> file:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;&lt;EOF &gt;slurmdbd.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">PidFile=/run/slurmdbd.pid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">LogFile=/var/log/slurm/slurmdbd.log</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DebugLevel=error</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DbdHost=localhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DbdPort=6819</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># DB connection data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">StorageType=accounting_storage/mysql</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">StorageHost=localhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">StoragePort=3306</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">StorageUser=slurm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">StoragePass=slurm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">StorageLoc=slurm_acct_db</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SlurmUser=slurm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Move the file to the correct location:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo mv slurmdbd.conf /etc/slurm-llnl/slurmdbd.conf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="create-the-database">Create the Database<a href="https://riverxdata.github.ios/river-docs/blog/single-node-slurm-setup#create-the-database" class="hash-link" aria-label="Direct link to Create the Database" title="Direct link to Create the Database">​</a></h3>
<p>Create the database and user:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo service mysql start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo mysql -e "CREATE DATABASE slurm_acct_db;" &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo mysql -e "CREATE USER 'slurm'@'localhost' IDENTIFIED BY 'slurm';" &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo mysql -e "GRANT ALL PRIVILEGES ON slurm_acct_db.* TO 'slurm'@'localhost';" &amp;&amp; \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo mysql -e "FLUSH PRIVILEGES;"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Verify the database and user:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo mysql -e "SHOW DATABASES;" </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo mysql -e "SELECT User, Host FROM mysql.user;"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo mysql -e "SHOW GRANTS FOR 'slurm'@'localhost';"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<figure markdown="span"><p><img decoding="async" loading="lazy" alt="cluster" src="https://riverxdata.github.ios/river-docs/assets/images/add_db-12d303160989d2beda2434df173597ee.png" width="1314" height="539" class="img_ev3q"></p></figure>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="start-slurmdbd-service">Start <code>slurmdbd</code> Service<a href="https://riverxdata.github.ios/river-docs/blog/single-node-slurm-setup#start-slurmdbd-service" class="hash-link" aria-label="Direct link to start-slurmdbd-service" title="Direct link to start-slurmdbd-service">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo service slurmdbd start</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Update <code>slurm.conf</code> to enable accounting:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo sed -i -e "s|AccountingStorageType=accounting_storage/none|AccountingStorageType=accounting_storage/slurmdbd\nAccountingStorageEnforce=associations,limits,qos\nAccountingStorageHost=localhost\nAccountingStoragePort=6819|" /etc/slurm-llnl/slurm.conf </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo sed -i -e "s|JobAcctGatherType=jobacct_gather/none|JobAcctGatherType=jobacct_gather/cgroup|" /etc/slurm-llnl/slurm.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl restart slurmctl slurmd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Add Linux users to Slurm accounting:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo sacctmgr -i add cluster localcluster</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo sacctmgr -i --quiet add account $USER Cluster=localcluster</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo sacctmgr -i --quiet add user $USER account=$USER DefaultAccount=root</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl restart slurmctl slurmd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<figure markdown="span"><p><img decoding="async" loading="lazy" alt="cluster" src="https://riverxdata.github.ios/river-docs/assets/images/add_account-29ee0d7948684467ad5ebbaf8ac1b09c.png" width="1327" height="511" class="img_ev3q"></p></figure>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="submit-a-job-and-view-metrics">Submit a Job and View Metrics<a href="https://riverxdata.github.ios/river-docs/blog/single-node-slurm-setup#submit-a-job-and-view-metrics" class="hash-link" aria-label="Direct link to Submit a Job and View Metrics" title="Direct link to Submit a Job and View Metrics">​</a></h3>
<p>Submit a job:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">srun --mem 500MB -c 1 --pty bash</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<figure markdown="span"><p><img decoding="async" loading="lazy" alt="cluster" src="https://riverxdata.github.ios/river-docs/assets/images/add_account-29ee0d7948684467ad5ebbaf8ac1b09c.png" width="1327" height="511" class="img_ev3q"></p></figure>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion"><strong>Conclusion</strong><a href="https://riverxdata.github.ios/river-docs/blog/single-node-slurm-setup#conclusion" class="hash-link" aria-label="Direct link to conclusion" title="Direct link to conclusion">​</a></h2>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><ul>
<li>Slurm is widely used in academic and industrial settings for orchestrating distributed jobs across multiple nodes.</li>
<li>While Slurm is relatively easy to set up, critical steps like resource limits and accounting are often overlooked.</li>
<li>Slurm integrates seamlessly with distributed computing frameworks like Spark, Ray, Dask, and Flink, enabling efficient resource utilization for local development.</li>
</ul></div></div>]]></content:encoded>
            <author>nttg8100@gmail.com (Thanh-Giang (River) Tan Nguyen)</author>
            <category>slurm</category>
            <category>hpc</category>
        </item>
        <item>
            <title><![CDATA[Welcome to RiverXData]]></title>
            <link>https://riverxdata.github.ios/river-docs/blog/welcome-to-riverxdata</link>
            <guid>https://riverxdata.github.ios/river-docs/blog/welcome-to-riverxdata</guid>
            <pubDate>Wed, 08 Jan 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Unlock the Power of Cloud-Based Data Analysis with RiverXData]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="unlock-the-power-of-cloud-based-data-analysis-with-riverxdata">Unlock the Power of Cloud-Based Data Analysis with RiverXData<a href="https://riverxdata.github.ios/river-docs/blog/welcome-to-riverxdata#unlock-the-power-of-cloud-based-data-analysis-with-riverxdata" class="hash-link" aria-label="Direct link to Unlock the Power of Cloud-Based Data Analysis with RiverXData" title="Direct link to Unlock the Power of Cloud-Based Data Analysis with RiverXData">​</a></h2>
<p><img decoding="async" loading="lazy" alt="RiverXData" src="https://riverxdata.github.ios/river-docs/assets/images/riverxdata-7084445302ca6fd53934723c09365793.svg" class="img_ev3q"></p>
<p>Welcome to <strong>RiverXData</strong>, a data platform designed for scalable and efficient data analysis. Built on top of <strong>SLURM</strong>, RiverXData brings the power of high-performance computing (HPC) to a user-friendly web-based interface, enabling researchers, engineers, and data scientists to run complex computational tasks with ease.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="why-riverxdata">Why RiverXData?<a href="https://riverxdata.github.ios/river-docs/blog/welcome-to-riverxdata#why-riverxdata" class="hash-link" aria-label="Direct link to Why RiverXData?" title="Direct link to Why RiverXData?">​</a></h3>
<p>Modern data analysis requires powerful computation, but traditional HPC environments can be challenging to access and manage. RiverXData simplifies this by providing:</p>
<ul>
<li><strong>Seamless Web-Based Access</strong>: Run jobs, manage workloads, and analyze results all from a web browser—no command-line expertise required.</li>
<li><strong>Scalability &amp; Performance</strong>: Harness the power of SLURM for efficient job scheduling and resource management.</li>
<li><strong>Cloud Flexibility</strong>: Deploy, scale, and optimize computational tasks without worrying about infrastructure.</li>
<li><strong>User-Friendly Interface</strong>: Modern web based job in slurm can be accessed interactively</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="get-started-today">Get Started Today<a href="https://riverxdata.github.ios/river-docs/blog/welcome-to-riverxdata#get-started-today" class="hash-link" aria-label="Direct link to Get Started Today" title="Direct link to Get Started Today">​</a></h3>
<p>Whether you're analyzing large datasets, running simulations, or training machine learning models, RiverXData empowers you to leverage the full potential of cloud-based HPC with minimal setup.</p>
<p>Stay tuned for tutorials, feature updates, and real-world use cases as we continue to improve RiverXData.</p>
<p>🔗 <strong>Explore more at <a href="https://riverxdata.github.ios/river-docs/blog/welcome-to-riverxdata#">RiverXData</a></strong></p>]]></content:encoded>
            <author>nttg8100@gmail.com (Thanh-Giang (River) Tan Nguyen)</author>
            <category>cloud</category>
            <category>data-analysis</category>
            <category>slurm</category>
            <category>hpc</category>
            <category>web-platform</category>
        </item>
    </channel>
</rss>